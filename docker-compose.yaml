version: '3.5'

services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ip-scan
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - '5432:5432'
    networks:
      - local
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  redis:
    image: redis:6.2.2
    networks:
      - local
    ports:
      - '6379:6379'

  elasticsearch:
    container_name: 'elasticsearch'
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    networks:
      - local
    ports:
      - 9200:9200

  be:
    image: ipscanbe
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '3000:3000'
    environment:
      HOST: 0.0.0.0
      PORT: 3000
      REDIS_URL: redis://redis:6379/1
      DATABASE_URL: 'postgresql://postgres:password@postgres:5432/ip-scan?schema=public'
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - local

networks:
  local:
    driver: bridge

volumes:
  postgres:
